version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...
executors:
  node:
    docker:
      - image: circleci/node:13.8.0
  python:
    docker:
      - image: python:3.9.0-alpine
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  # create-ansible-inventory:
  #   executor: node
  #   steps:
  #     - checkout
  #     - run:
  #         name: create default inventory file
  #         working_directory: ./.circleci/ansible
  #         command: echo [all] > inventory
  #     - run:
  #       name: append ec2 instances to inventory
  #       working_directory: ./.circleci/ansible
  #       command: |
  #         <<-EOT
  #           aws ec2 describe-instances \
  #           --query 'Reservations[*].Instances[*].PublicIpAddress' \
  #           --filters "Name=tag:project,Values=udacity" \
  #           --output text >> inventory \
  #           && cat inventory
  #         EOT
  #     - save_cache:
  #         paths:
  #           - .circleci/ansible
  #         key: ansible-content


  deploy-infrastructure:
    executor: aws
    steps:
      - checkout
      - run:
          name: Deploy EC2 instance on AWS with aws cli
          working_directory: ./.circleci/files
          command: |
            aws cloudformation create-stack \
              --stack-name ec2-instance \
              --template-body file://backend.yml \
              --parameters ParameterKey=ID,ParameterValue=udapeople \
              --region=${AWS_DEFAULT_REGION}
      - run:
          name: Save EC2 IP address in ansible inventory file
          working_directory: ./.circleci/ansible
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:project,Values=udacity" \
              --output text >> inventory \
              && cat inventory


  configure-infrastructure:
    executor: python
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["06:55:19:5c:75:9c:0c:fa:5e:f0:ed:c4:2b:35:ec:76"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          working_directory: ./.circleci/ansible
          command: |
            ansible-playbook -i inventory deploy-server.yml

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - deploy-infrastructure
      - configure-infrastructure:
          requires:
            - deploy-infrastructure
