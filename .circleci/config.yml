version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...
executors:
  node:
    docker:
      - image: circleci/node:13.8.0
  python:
    docker:
      - image: python:3.9.0-alpine

jobs:
  install-backend-dependencies:
    executor: node
    steps:
      - checkout
      - run:
          name: npm install
          working_directory: ./backend
          command: ls -la && npm install
      - save_cache:
          paths:
            - backend/node_modules
          key: backend-deps

  install-frontend-dependencies:
   executor: node
   steps:
      - checkout
      - run:
          name: npm install
          working_directory: ./frontend
          command: ls -la && npm install
      - save_cache:
          paths:
            - frontend/node_modules
          key: frontend-dependencies

  build-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: backend-deps
      - run:
          name: npm run build
          working_directory: ./backend
          command: npm run build

  build-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: frontend-dependencies
      - run:
          name: npm run build
          working_directory: ./frontend
          command: npm run build

  test-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: frontend-dependencies
      - run:
          name: Install junit coverage reporter
          working_directory: ./frontend
          command: npm install --save-dev jest-junit
      - run:
          name: Run tests with JUnit as reporter
          working_directory: ./frontend
          command: npm test -- --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: /tmp
      - store_test_results:
          path: /tmp
      - store_artifacts:
          path: /tmp

  test-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: backend-deps
      - run:
          name: Install junit coverage reporter
          working_directory: ./backend
          command: npm install --save-dev jest-junit
      - run:
          name: Run tests with JUnit as reporter
          working_directory: ./backend
          command: npm test -- --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: /tmp
      - store_test_results:
          path: /tmp
      - store_artifacts:
          path: /tmp

#  scan-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - install-backend-dependencies
      - install-frontend-dependencies

      - build-backend:
          requires:
            - install-backend-dependencies
      - build-frontend:
          requires:
            - install-frontend-dependencies
      - test-frontend:
          requires:
            -  build-frontend
      - test-backend:
          requires:
            -  build-backend
